version: '3'

services:
  base_node:
    image: base_node
    build:
      context: .
    volumes:
      - .:/usr/src/app
    container_name: base_node

  mongodb0:
    image: mongo:4.0-xenial
    container_name: mongodb_0
    hostname: mongodb0
    depends_on:
      - mongodb1
      - mongodb2
    volumes:
      - ./mongo:/mongo
      - mongodb_data0:/data/db
    restart: always
    command: --bind_ip_all --replSet "rs0" --oplogSize 128

  mongodb1:
    image: mongo:4.0-xenial
    container_name: mongodb_1
    hostname: mongodb1
    volumes:
      - mongodb_data1:/data/db
    restart: always
    command: --bind_ip_all --replSet "rs0" --oplogSize 128

  mongodb2:
    image: mongo:4.0-xenial
    container_name: mongodb_2
    hostname: mongodb2
    volumes:
      - mongodb_data2:/data/db
    restart: always
    command: --bind_ip_all --replSet "rs0" --oplogSize 128

  adminmongo:
    image: 'mrvautin/adminmongo'
    container_name: adminmongo
    environment:
      # work around but this might break in the future https://github.com/mrvautin/adminMongo/issues/229
      - HOST=0.0.0.0
    ports:
      - 1234:1234

  nats:
    image: nats
    container_name: nats
    expose:
      - 4222

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:80
    depends_on:
      - auth

  auth:
    container_name: auth_service
    image: base_node:latest
    command: yarn dev auth
    depends_on:
      - base_node
      - nats

  user:
    container_name: user_service
    image: base_node:latest
    command: yarn dev user
    depends_on:
      - base_node
      - nats

  stage:
    container_name: stage_gateway
    image: base_node:latest
    command: yarn dev stage
    depends_on:
      - base_node
      - nats
      - mongodb0
    ports:
      - 8080

volumes:
  node_modules:
  mongodb_data0:
  mongodb_data1:
  mongodb_data2:
